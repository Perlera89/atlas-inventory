// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cash {
  id          Int        @id @default(autoincrement())
  initBalance Decimal
  endBalance  Decimal
  income      Decimal
  expensive   Decimal
  note        String
  isDeleted   Boolean
  salePoint   SalePoint?
}

model Position {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  isDeleted   Boolean    @default(false)
  employees   Employee[]
}

model District {
  id        Int      @id @default(autoincrement())
  name      String
  note      String
  address   Address?
  isDeleted Boolean  @default(false)
}

model City {
  id        Int      @id @default(autoincrement())
  name      String
  note      String
  address   Address?
  isDeleted Boolean  @default(false)
}

model Address {
  id           Int        @id @default(autoincrement())
  departmentId Int        @unique
  cityId       Int        @unique
  districtId   Int        @unique
  profile      Profile?
  client       Client?
  isDeleted    Boolean    @default(false)
  department   Department @relation(fields: [departmentId], references: [id])
  city         City       @relation(fields: [cityId], references: [id])
  district     District   @relation(fields: [districtId], references: [id])
  employees    Employee[]
  providers    Provider[]
}

model Provider {
  id             Int        @id @default(autoincrement())
  name           String
  tel            String
  email          String
  paymentTerms   String
  returnPolities String
  warranties     String
  deliveryTimes  String
  addressId      Int
  isDeleted      Boolean    @default(false)
  address        Address    @relation(fields: [addressId], references: [id])
  purchases      Purchase[]
}

model Sale {
  id           Int           @id @default(autoincrement())
  code         Int
  discount     Decimal
  note         String
  stateId      Int           @unique
  isCancel     Boolean
  userId       Int           @unique
  clientId     Int           @unique
  isDeleted    Boolean       @default(false)
  state        State         @relation(fields: [stateId], references: [id])
  user         User          @relation(fields: [userId], references: [id])
  client       Client        @relation(fields: [clientId], references: [id])
  productSales ProductSale[]
}

model Area {
  id           Int           @id @default(autoincrement())
  name         String
  isDeleted    Boolean       @default(false)
  productInfos ProductInfo[]
}

model Brand {
  id           Int           @id @default(autoincrement())
  name         String
  isDeleted    Boolean       @default(false)
  productInfos ProductInfo[]
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  isDeleted    Boolean       @default(false)
  tags         Tag[]
  productInfos ProductInfo[]
}

model Tag {
  id         Int         @id @default(autoincrement())
  name       String
  categoryId Int
  categories   Category    @relation(fields: [categoryId], references: [id])
  isDeleted  Boolean     @default(false)
  tagDetails TagDetail[]
}

model TagDetail {
  id          Int         @id @default(autoincrement())
  tagId       Int
  productId   Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  isDeleted   Boolean     @default(false)
  tag         Tag         @relation(fields: [tagId], references: [id])
  productInfo ProductInfo @relation(fields: [productId], references: [id])
}

model ProductInfo {
  id           Int         @id @default(autoincrement())
  name         String
  thumbnail    String @default("/placeholder.svg")
  minimumStock Int
  safetyInfo   String @default("Empty")
  description  String @default("Empty")
  categoryId   Int
  typeId       Int         
  areaId       Int?
  brandId      Int
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())
  isDeleted    Boolean     @default(false)
  type         Type        @relation(fields: [typeId], references: [id])
  category     Category    @relation(fields: [categoryId], references: [id])
  area         Area?       @relation(fields: [areaId], references: [id])
  brand        Brand       @relation(fields: [brandId], references: [id])
  products     Product[]
  tagDetails   TagDetail[]
}

model Product {
  id            Int           @id @default(autoincrement())
  code          String
  stock         Int @default(0)
  purchasePrice Decimal
  minimumPrice  Decimal
  salePrice     Decimal
  iva           Decimal @default(0)
  productInfoId Int?          @unique
  isOnSale      Boolean       @default(true)
  isBlocked     Boolean       @default(false)
  isDeleted     Boolean       @default(false)
  purshase      Purchase?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  productInfo   ProductInfo?  @relation(fields: [productInfoId], references: [id])
  productSales  ProductSale[]
}

model ProductSale {
  id        Int      @id @default(autoincrement())
  amount    Int
  price     Float
  saleId    Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isDeleted Boolean  @default(false)
  sale      Sale     @relation(fields: [saleId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Employee {
  id         Int         @id @default(autoincrement())
  email      String
  firstName  String
  lastName   String
  tel        Int
  genreId    Int         @unique
  salary     Decimal
  positionId Int         @unique
  addressId  Int
  user       User?
  isDeleted  Boolean     @default(false)
  genre      Genre       @relation(fields: [genreId], references: [id])
  position   Position    @relation(fields: [positionId], references: [id])
  address    Address     @relation(fields: [addressId], references: [id])
  salePoints SalePoint[]
}

model User {
  id         Int      @id @default(autoincrement())
  sale       Sale?
  userName   String
  pass       String
  date       DateTime
  lastDate   DateTime
  typeId     Int      @unique
  employeeId Int      @unique
  isDeleted  Boolean  @default(false)
  type       TypeUser @relation(fields: [typeId], references: [id])
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Profile {
  id         Int     @id @default(autoincrement())
  thumbnails String
  name       String
  tel        Int
  email      String
  addressId  Int     @unique
  isDeleted  Boolean @default(false)
  address    Address @relation(fields: [addressId], references: [id])
}

model Purchase {
  id         Int      @id @default(autoincrement())
  code       String
  amount     Int
  price      Float
  productId  Int      @unique
  providerId Int
  isDeleted  Boolean  @default(false)
  product    Product  @relation(fields: [productId], references: [id])
  provider   Provider @relation(fields: [providerId], references: [id])
}

model SalePoint {
  id         Int      @id @default(autoincrement())
  name       String
  code       Int
  state      String
  balance    Decimal
  employeeId Int
  cashId     Int      @unique
  isDeleted  Boolean  @default(false)
  employee   Employee @relation(fields: [employeeId], references: [id])
  cash       Cash     @relation(fields: [cashId], references: [id])
}

model Client {
  id           Int     @id @default(autoincrement())
  sale         Sale?
  firts_name   String
  last_name    String
  dui          Int
  tel          Int
  email        String
  relevantInfo String
  addressId    Int     @unique
  isDeleted    Boolean @default(false)
  address      Address @relation(fields: [addressId], references: [id])
}

model Department {
  id        Int      @id @default(autoincrement())
  name      String
  address   Address?
  isDeleted Boolean  @default(false)
}

model State {
  id        Int     @id @default(autoincrement())
  name      String
  sale      Sale?
  isDeleted Boolean @default(false)
}

model Type {
  id           Int           @id @default(autoincrement())
  name         String
  isDeleted    Boolean       @default(false)
  productInfos ProductInfo[]
}

model Genre {
  id         Int       @id @default(autoincrement())
  name       String
  employeeId Employee?
  isDeleted  Boolean   @default(false)
}

model TypeUser {
  id        Int     @id @default(autoincrement())
  name      String
  user      User?
  isDeleted Boolean @default(false)
}

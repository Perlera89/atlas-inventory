// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cash {
  id          Int      @id @default(autoincrement())
  initBalance Decimal
  endBalance  Decimal
  income      Decimal
  expensive   Decimal
  note        String
  date        DateTime @default(now())
  isDeleted   Boolean

  salePoint SalePoint[]
}

model Position {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  employees Employee[]
}

model Department {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  addresses Address[]
  districts District[]
}

model District {
  id           Int     @id @default(autoincrement())
  name         String
  departmentId Int
  isDeleted    Boolean @default(false)

  department Department @relation(fields: [departmentId], references: [id])

  addresses Address[]
  cities    City[]
}

model City {
  id         Int       @id @default(autoincrement())
  name       String
  districtId Int
  addresses  Address[]
  district   District  @relation(fields: [districtId], references: [id])
  isDeleted  Boolean   @default(false)
}

model Address {
  id           Int     @id @default(autoincrement())
  departmentId Int
  districtId   Int
  cityId       Int
  isDeleted    Boolean @default(false)

  department Department @relation(fields: [departmentId], references: [id])
  city       City       @relation(fields: [cityId], references: [id])
  district   District   @relation(fields: [districtId], references: [id])

  profile   Profile?
  clients   Client[]
  employees Employee[]
  providers Provider[]
}

model Provider {
  id             Int      @id @default(autoincrement())
  name           String
  tel            String
  email          String
  paymentTerms   String
  returnPolities String
  warranties     String
  deliveryTimes  String
  addressId      Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  isDeleted      Boolean  @default(false)

  address Address @relation(fields: [addressId], references: [id])

  purchases Purchase[]
}

model Sale {
  id              Int      @id @default(autoincrement())
  code            String
  note            String   @default("Empty")
  isCancel        Boolean  @default(false)
  statusId        Int
  paymentMethodId Int
  employeeId      Int
  clientId        Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  isDeleted       Boolean  @default(false)

  status        Status         @relation(fields: [statusId], references: [id])
  employee      Employee       @relation(fields: [employeeId], references: [id])
  client        Client?        @relation(fields: [clientId], references: [id])
  paymentMethod PaymentMethod? @relation(fields: [paymentMethodId], references: [id])

  productSales ProductSale[]
}

model PaymentMethod {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  sales Sale[]
}

model Area {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  productInfos ProductInfo[]
}

model Brand {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  productInfos ProductInfo[]
}

model Category {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  tags         Tag[]
  productInfos ProductInfo[]
}

model Tag {
  id         Int     @id @default(autoincrement())
  name       String
  categoryId Int
  isDeleted  Boolean @default(false)

  categories Category @relation(fields: [categoryId], references: [id])

  tagDetails TagDetail[]
}

model TagDetail {
  id        Int      @id @default(autoincrement())
  tagId     Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isDeleted Boolean  @default(false)

  tag         Tag         @relation(fields: [tagId], references: [id])
  productInfo ProductInfo @relation(fields: [productId], references: [id])
}

model ProductInfo {
  id           Int      @id @default(autoincrement())
  name         String
  thumbnail    String   @default("/placeholder.svg")
  minimumStock Int
  safetyInfo   String   @default("Empty")
  description  String   @default("Empty")
  categoryId   Int
  typeId       Int
  areaId       Int?
  brandId      Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isDeleted    Boolean  @default(false)

  type     Type     @relation(fields: [typeId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
  area     Area?    @relation(fields: [areaId], references: [id])
  brand    Brand    @relation(fields: [brandId], references: [id])

  products   Product[]
  tagDetails TagDetail[]
}

model Product {
  id            Int      @id @default(autoincrement())
  code          String
  stock         Int      @default(0)
  purchasePrice Decimal
  minimumPrice  Decimal
  salePrice     Decimal
  iva           Decimal  @default(0)
  productInfoId Int?     @unique
  isOnSale      Boolean  @default(true)
  isBlocked     Boolean  @default(false)
  createdAt     DateTime @default(now())
  isDeleted     Boolean  @default(false)
  updatedAt     DateTime @updatedAt

  productInfo ProductInfo? @relation(fields: [productInfoId], references: [id])

  purshase     Purchase?
  productSales ProductSale[]
}

model ProductSale {
  id        Int     @id @default(autoincrement())
  amount    Int
  price     Float
  discount  Decimal
  saleId    Int
  productId Int
  isDeleted Boolean @default(false)

  sale    Sale    @relation(fields: [saleId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model SalePoint {
  id         Int     @id @default(autoincrement())
  name       String
  code       Int
  state      String
  balance    Decimal
  employeeId Int
  cashId     Int
  isDeleted  Boolean @default(false)

  employee Employee @relation(fields: [employeeId], references: [id])
  cash     Cash     @relation(fields: [cashId], references: [id])
}

model Employee {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  dui        String?
  email      String?  @unique
  phone      String?
  genreId    Int
  salary     Decimal
  positionId Int
  addressId  Int
  userId     Int?     @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isDeleted  Boolean  @default(false)

  genre    Genre    @relation(fields: [genreId], references: [id])
  position Position @relation(fields: [positionId], references: [id])
  address  Address  @relation(fields: [addressId], references: [id])
  user     User?    @relation(fields: [userId], references: [id])

  sales      Sale[]
  salePoints SalePoint[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  role      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)

  employee Employee?
}

model Profile {
  id          Int      @id @default(autoincrement())
  thumbnail   String
  name        String
  phone       String
  email       String?
  nrc         String?
  addressId   Int      @unique
  description String   @default("Empty")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isDeleted   Boolean  @default(false)

  address Address @relation(fields: [addressId], references: [id])
}

model Purchase {
  id         Int      @id @default(autoincrement())
  code       String
  amount     Int
  price      Float
  productId  Int      @unique
  providerId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isDeleted  Boolean  @default(false)

  product  Product  @relation(fields: [productId], references: [id])
  provider Provider @relation(fields: [providerId], references: [id])
}

model Client {
  id           Int      @id @default(autoincrement())
  firstName    String
  lastName     String
  dui          String
  phone        String?
  email        String?
  relevantInfo String   @default("Empty")
  addressId    Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isDeleted    Boolean  @default(false)

  address Address @relation(fields: [addressId], references: [id])

  sales Sale[]
}

model Status {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  sales Sale[]
}

model Type {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  productInfos ProductInfo[]
}

model Genre {
  id        Int     @id @default(autoincrement())
  name      String
  isDeleted Boolean @default(false)

  employees Employee[]
}
